v1.4.0
======
* Added SUBSTRING datatype
* Added GET_WEBELEMENT_TEXT action
* Added VERIFY_NO_WEBELEMENT action
* The default fail type is now FAIL_TCASE
* Functionality for references has been updated
    - For all actions other than CREATE_REFERENCE the reference field will be used for resolving references used in all other fields
        - The reference field will be the only field where references cannot be resolved
        - References cannot be resolved while using the CREATE_REFERENCE action
    - Users may choose to resolve multiple references by delimiting them with a space
        - For example, the reference field could contain "firstName lastName", which will attempt to resolve all firstName and
          lastName references
    - Using the CREATE_REFERENCE action is now the only way to create references
            - The reference field will be used to name the reference being created
            - To resolve references while using the CREATE_REFERENCE action, put the references you want to resolve in the reference field
                - For example, the other field could contain "firstName lastName", which will attempt to resolve all firstName and
                          lastName references
* Added VERIFY_WEBELEMENT_ENABLED action
* Added VERIFY_WEBELEMENT_DISABLED action
* The implementation for Actions is now located in the Action enum
* The implementation for Datatypes is now located in the AutoGenerateDataType enum
* The title attribute for Page now uses regex

v1.3.0
======
* Added FIREFOX browser support
    - Set the browserType property to FIREFOX in order to use Firefox as your browser
* Added EDGE browser support
    - Set the browserType property to EDGE in order to use Edge as your browser
* Added SAFARI browser support (not fully supported)
    - Set the browserType property to SAFARI in order to use Safari as your browser
* An error will now be displayed if a browser that's not supported is used
* An error will now be displayed telling the user whether they need to enable automation in their browser
* Updated guava dependency from 22.0 to 31.1-jre
* Updated selenium-java dependency from 4.1.3 to 4.5.3

v1.2.2
======
* Fixed issue where automation was failing after performing an action that causes the browser to change pages

v1.2.1
======
* Added fix for 403 Forbidden error that occurred when Chrome Browser was launched in headless mode
v1.2.0
======
* Added Other field to TestStep
    - This field functions as a miscellaneous field for test steps
* Added MAXIMIZE_BROWSER action
    - Maximizes the browser window
* Added FULLSCREEN action
    - Sets the browser window to fullscreen
* Added browserSize property
    - Sets the size the browser will open with by specifying height and width
    - Example: browserSize=1024,768
    - If the property isn't used, the value doesn't have the proper syntax, or the value is 'maximzie', the browser will
      be maximized after launching
* Added headless property
    - The webdriver will run with headless set to true
* com.qcefast.util.ActionResolver is now com.qcefast.util.BrowserActions
* The frameElement field of com.qcefast.frameworkSpecific.FastElement is now called parentFrame
    - The getter and setter methods have been updated
* Updated retry logic
    - Retry and browserloop logic will repeat even if element has been found, for the cases where there was an issue
      interacting with the found object
    - com.qcefast.fastXml.TestStep now has an attribute called dontRetryAction. Setting this field to true, will allow
      the test step fail without additional retries, if the element was found but an issue occurred while trying to
      interact with it. com.qcefast.frameworkSpecific.FastElement also has a corresponding field called dontRetryIfFound
      which functions in the same way
* com.qcefast.frameworkSpecific.FastElement now has a performFastElementAction() method.
    - This will perform an action on a found fastElement based on the action set using
      fastElement.setAction(com.qcefast.enums.Action)
* Added scrollIntoView method to com.qcefast.frameworkSpecific.FastElement
    - When finding elements, the framework will use this method with true as the parameter, and this method will be
      executed in order to scroll elements into view

v1.1.1
======

* Fixed error that occurred when calling the getCause() method on an exception returned null.

v1.1.0
======

* Added gifs for the majority of the Actions
* Added gifs for the majority of DataTypes
* Updated COPY_FILE, COPY_FILE_TSTEP, MOVE_FILE, MOVE_FILE_TSTEP functionality
    - The data field is now used for the destination file, and dataparameters field is used for the target file
* Removed DataType and DataGen from actions that would likely not use it. For those that may use it, added a note to
  say that they are optional
* Delimiter is now specifically used internally.
* Exception names will no longer appear in html report, only the exception message.
